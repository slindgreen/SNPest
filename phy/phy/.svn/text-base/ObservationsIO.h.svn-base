#ifndef __ObservationsIO_h
#define __ObservationsIO_h

#include "phy/Observations.h"
#include <iostream>
#include <cctype> 
#include <map> 

namespace phy {

  /** Overloaded input / output operator for StateMaps. */
  istream & operator>>(istream & str, StateMap & staMap);
  ostream & operator<<(ostream & str, StateMap const & staMap);

  /** Writes explicit output specification of StateMaps. */
  void writeStateMap2(ostream & str, StateMap const & staMap);

  /** Read state map specification file and return map between names and stateMap pointers */
  map<string, StateMapPtr_t> readStateMapFile(string const & file);
  map<string, StateMapPtr_t> readStateMapFile(istream & str);

  /** Write state map specification file (only useful with named state maps) */
  void writeStateMapFile(string const & file, map<string, StateMapPtr_t> const & smMap);
  void writeStateMapFile(ostream & str, map<string, StateMapPtr_t> const & smMap);

  /** Write state map specification file (outputs complete state map specifications) */
  void writeStateMapFile2(string const & file, map<string, StateMapPtr_t> const & smMap);
  void writeStateMapFile2(ostream & str, map<string, StateMapPtr_t> const & smMap);

  /** Dispatch named StateMaps. */
  StateMap stateMapDispatcher(string const & name);


} // end namespace phy

#endif  //__ObservationsIO_h
